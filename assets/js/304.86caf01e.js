(window.webpackJsonp=window.webpackJsonp||[]).push([[304],{1860:function(t,e,a){"use strict";a.r(e);var r=a(44),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#_1、含义"}},[t._v("1、含义")])]),a("li",[a("a",{attrs:{href:"#_2、思想"}},[t._v("2、思想")])]),a("li",[a("a",{attrs:{href:"#_3、对应的配置文件"}},[t._v("3、对应的配置文件")])])])]),a("p"),t._v(" "),a("h1",{attrs:{id:"pom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pom"}},[t._v("#")]),t._v(" POM")]),t._v(" "),a("h2",{attrs:{id:"_1、含义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、含义"}},[t._v("#")]),t._v(" 1、含义")]),t._v(" "),a("p",[t._v("POM：Project Object Model，项目对象模型。和POM类似的是：DOM：Document Object Model，文档对象模型。")]),t._v(" "),a("h2",{attrs:{id:"_2、思想"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、思想"}},[t._v("#")]),t._v(" 2、思想")]),t._v(" "),a("p",[t._v("POM表示将工程抽象为一个模型，再用程序中的对象来描述这个模型。这样我们就可以用程序来管理项目了。我们在开发过程中，最基本的做法就是将现实生活中的事物抽象为模型，然后封装模型相关的数据作为一个对象，这样就可以在程序中计算相关的数据。")]),t._v(" "),a("h2",{attrs:{id:"_3、对应的配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、对应的配置文件"}},[t._v("#")]),t._v(" 3、对应的配置文件")]),t._v(" "),a("p",[t._v("POM理念集中体现在Maven工程根目录下pom.xml这个配置文件中。所以这个pom.xml配置文件就是Maven工程的核心配置文件。其实学习Maven就是学这个文件怎么配置，各个配置有什么用。")]),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/pro001-fengJie/pro002-maven/note/index.html"}},[t._v("回目录")]),t._v(" "),a("RouterLink",{attrs:{to:"/pro001-fengJie/pro002-maven/note/concept-directory.html"}},[t._v("下一节")])],1)])}),[],!1,null,null,null);e.default=s.exports}}]);